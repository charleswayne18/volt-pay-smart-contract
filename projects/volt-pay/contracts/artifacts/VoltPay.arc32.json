{
  "hints": {
    "optInToApplication()void": {
      "call_config": {
        "opt_in": "CALL"
      }
    },
    "makeVtuPayment(pay,string,string,string,string)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "revokePoints(pay)void": {
      "call_config": {
        "no_op": "CALL"
      }
    },
    "createApplication()void": {
      "call_config": {
        "no_op": "CREATE"
      }
    }
  },
  "bare_call_config": {
    "no_op": "NEVER",
    "opt_in": "NEVER",
    "close_out": "NEVER",
    "update_application": "NEVER",
    "delete_application": "NEVER"
  },
  "schema": {
    "local": {
      "declared": {
        "points": {
          "type": "uint64",
          "key": "points"
        }
      },
      "reserved": {}
    },
    "global": {
      "declared": {},
      "reserved": {}
    }
  },
  "state": {
    "global": {
      "num_byte_slices": 0,
      "num_uints": 0
    },
    "local": {
      "num_byte_slices": 0,
      "num_uints": 1
    }
  },
  "source": {
    "approval": "",
    "clear": "I3ByYWdtYSB2ZXJzaW9uIDEw"
  },
  "contract": {
    "name": "VoltPay",
    "desc": "",
    "methods": [
      {
        "name": "optInToApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "makeVtuPayment",
        "desc": "This method is called by a person that wants to make a VTU payment",
        "args": [
          {
            "name": "paymentTxn",
            "type": "pay",
            "desc": "The transaction containing payment for the VTU request"
          },
          {
            "name": "phone",
            "type": "string",
            "desc": "The phone number for the request."
          },
          {
            "name": "operator",
            "type": "string",
            "desc": "The VTU operator"
          },
          {
            "name": "type",
            "type": "string",
            "desc": "The VTU type"
          },
          {
            "name": "value",
            "type": "string",
            "desc": "The VTU value"
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "revokePoints",
        "desc": "This revokes the points of a user in the event of\na refund.",
        "args": [
          {
            "name": "refundTransaction",
            "type": "pay",
            "desc": "The transaction refunding the user."
          }
        ],
        "returns": {
          "type": "void"
        }
      },
      {
        "name": "createApplication",
        "args": [],
        "returns": {
          "type": "void"
        }
      }
    ]
  }
}