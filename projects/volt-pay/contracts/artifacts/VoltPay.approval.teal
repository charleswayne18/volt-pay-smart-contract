#pragma version 10
intcblock 1 0
bytecblock 0x706f696e7473

// This TEAL was generated by TEALScript v0.105.3
// https://github.com/algorandfoundation/TEALScript

// This contract is compliant with and/or implements the following ARCs: [ ARC4 ]

// The following ten lines of TEAL handle initial program flow
// This pattern is used to make it easy for anyone to parse the start of the program and determine if a specific action is allowed
// Here, action refers to the OnComplete in combination with whether the app is being created or called
// Every possible action for this contract is represented in the switch statement
// If the action is not implemented in the contract, its respective branch will be "*NOT_IMPLEMENTED" which just contains "err"
txn ApplicationID
!
pushint 6
*
txn OnCompletion
+
switch *call_NoOp *call_OptIn *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *create_NoOp *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED *NOT_IMPLEMENTED

*NOT_IMPLEMENTED:
	// The requested action is not implemented in this contract. Are you using the correct OnComplete? Did you set your app ID?
	err

// optInToApplication()void
*abi_route_optInToApplication:
	// execute optInToApplication()void
	callsub optInToApplication
	intc 0 // 1
	return

// optInToApplication(): void
optInToApplication:
	proto 0 0
	retsub

// makeVtuPayment(pay,string,string,string,string)void
*abi_route_makeVtuPayment:
	// value: string
	txna ApplicationArgs 4
	extract 2 0

	// type: string
	txna ApplicationArgs 3
	extract 2 0

	// operator: string
	txna ApplicationArgs 2
	extract 2 0

	// phone: string
	txna ApplicationArgs 1
	extract 2 0

	// paymentTxn: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 4 (paymentTxn) for makeVtuPayment must be a pay transaction
	assert

	// execute makeVtuPayment(pay,string,string,string,string)void
	callsub makeVtuPayment
	intc 0 // 1
	return

// makeVtuPayment(paymentTxn: PayTxn, phone: string, operator: string, type: string, value: string): void
//
// This method is called by a person that wants to make a VTU payment
// @param paymentTxn The transaction containing payment for the VTU request
// @param phone The phone number for the request.
// @param operator The VTU operator
// @param type The VTU type
// @param value The VTU value
makeVtuPayment:
	proto 5 0

	// contracts/VoltPay.algo.ts:17
	// assert(paymentTxn.receiver === this.app.address, 'Receiver should be the app address')
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Receiver
	global CurrentApplicationAddress
	==

	// Receiver should be the app address
	assert

	// contracts/VoltPay.algo.ts:18
	// assert(this.txn.sender === paymentTxn.sender, 'Sender should be the caller of this method')
	txn Sender
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Sender
	==

	// Sender should be the caller of this method
	assert

	// contracts/VoltPay.algo.ts:19
	// assert(paymentTxn.amount > 0, 'No zero amount transfers')
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Amount
	intc 1 // 0
	>

	// No zero amount transfers
	assert

	// contracts/VoltPay.algo.ts:21
	// this.points(paymentTxn.sender).value = this.points(paymentTxn.sender).value + paymentTxn.amount
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Sender
	bytec 0 //  "points"
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Sender
	bytec 0 //  "points"
	app_local_get
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Amount
	+
	app_local_put

	// contracts/VoltPay.algo.ts:23
	// sendPayment({
	//       receiver: this.app.creator,
	//       amount: paymentTxn.amount,
	//     })
	itxn_begin
	intc 0 //  pay
	itxn_field TypeEnum

	// contracts/VoltPay.algo.ts:24
	// receiver: this.app.creator
	txna Applications 0
	app_params_get AppCreator
	pop
	itxn_field Receiver

	// contracts/VoltPay.algo.ts:25
	// amount: paymentTxn.amount
	frame_dig -1 // paymentTxn: PayTxn
	gtxns Amount
	itxn_field Amount

	// Fee field not set, defaulting to 0
	intc 1 // 0
	itxn_field Fee

	// Submit inner transaction
	itxn_submit
	retsub

// revokePoints(pay)void
*abi_route_revokePoints:
	// refundTransaction: pay
	txn GroupIndex
	intc 0 // 1
	-
	dup
	gtxns TypeEnum
	intc 0 //  pay
	==

	// argument 0 (refundTransaction) for revokePoints must be a pay transaction
	assert

	// execute revokePoints(pay)void
	callsub revokePoints
	intc 0 // 1
	return

// revokePoints(refundTransaction: PayTxn): void
//
// This revokes the points of a user in the event of
// a refund.
// @param refundTransaction The transaction refunding the user.
revokePoints:
	proto 1 0

	// contracts/VoltPay.algo.ts:35
	// assert(this.txn.sender === this.app.creator)
	txn Sender
	txna Applications 0
	app_params_get AppCreator
	pop
	==
	assert

	// contracts/VoltPay.algo.ts:36
	// assert(this.points(refundTransaction.receiver).exists, 'This target account does not have any points')
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Receiver
	txna Applications 0
	bytec 0 //  "points"
	app_local_get_ex
	swap
	pop

	// This target account does not have any points
	assert

	// contracts/VoltPay.algo.ts:37
	// assert(this.points(refundTransaction.receiver).value >= refundTransaction.amount)
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Receiver
	bytec 0 //  "points"
	app_local_get
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Amount
	>=
	assert

	// contracts/VoltPay.algo.ts:38
	// assert(refundTransaction.amount > 0)
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Amount
	intc 1 // 0
	>
	assert

	// contracts/VoltPay.algo.ts:40
	// this.points(refundTransaction.receiver).value = this.points(refundTransaction.receiver).value - refundTransaction.amount
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Receiver
	bytec 0 //  "points"
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Receiver
	bytec 0 //  "points"
	app_local_get
	frame_dig -1 // refundTransaction: PayTxn
	gtxns Amount
	-
	app_local_put
	retsub

*abi_route_createApplication:
	intc 0 // 1
	return

*create_NoOp:
	pushbytes 0xb8447b36 // method "createApplication()void"
	txna ApplicationArgs 0
	match *abi_route_createApplication

	// this contract does not implement the given ABI method for create NoOp
	err

*call_NoOp:
	pushbytes 0x068485e3 // method "makeVtuPayment(pay,string,string,string,string)void"
	pushbytes 0xce1ee904 // method "revokePoints(pay)void"
	txna ApplicationArgs 0
	match *abi_route_makeVtuPayment *abi_route_revokePoints

	// this contract does not implement the given ABI method for call NoOp
	err

*call_OptIn:
	pushbytes 0x01a3a3ff // method "optInToApplication()void"
	txna ApplicationArgs 0
	match *abi_route_optInToApplication

	// this contract does not implement the given ABI method for call OptIn
	err